■kmeans関数
Exampleでは、以下のようにクラスタリングの性質を分析している。

・要素x, yからなる100個の乱数列を生成する。
　このうち50個は要素x, yがμ=0、σ=0.3の正規分布に従う乱数からなり、
　残りの50個は要素x, yがμ=1、σ=0.3の正規分布に従う乱数からなる。
・乱数列をkmeans関数を用いて2つのクラスタからなるオブジェクトclに分割し、
　クラスタ領域およびclの要素centersをxy平面にプロットする。
・分割結果にfitted関数を適用し、モデルの当てはめ値の列をfitted.xに格納する。
　また、当てはめ値と乱数列の各要素との距離をresid.xに格納する。
・stopifnot関数により、オブジェクトclの要素totss、tot.withinss、betweenssと
　乱数列x、resid.x、fitted.xそれぞれの中心からの距離の二乗和とを比較する。

これを実行した結果、fitted.xの値がclの要素centersの値と一致することがわかり、
totssと乱数列xの総平方和、tot.withinssとresid.xの総平方和、betweenssとfitted.xの
総平方和が一致することが確認された。
したがって、totssはデータ全体の散らばり、tot.withinssは各クラスタ内での散らばり、
betweenssはクラスタ中心の散らばりの指標であると考えられる。特にtot.withinssとbetweenssの
値の差異によって、それぞれのクラスタがどれだけ分離されているかを推測できると予想される。

■hclust関数
Exampleでは、以下のようにクラスタリングの性質を分析している。

・アメリカ各州の暴力犯罪発生率の一覧から距離行列を生成し、距離の二乗に基づいて
　hclust関数によるクラスタ分析を行い、クラスタ併合によるツリーを構成する。
・各州を10個のクラスタに分割し、クラスタの中心を求める。
・10個のクラスタ中心を用いてクラスタ分析を行い、ツリーを再構成する。

これを実行した結果、データ全体から構成した併合ツリーの上部と10個のクラスタ中心から
構成した併合ツリーが一致することが確認された。
したがって、分割されたクラスタについての情報が存在すればデータ全体の情報がなくても
併合されたクラスタが構成できると考えられる。特に非常に多くのデータを扱う場合では、いくつかの
クラスタに関する情報があれば分析の高速化が可能であると予想される。


